help(read.csv)
install.packages("RCurl")
library("RCurl")
mysite <- "https://github.com/melindahiggins2000/melindahiggins2000.github.io/blob/master/testdata.csv"
mysite
class(mysite)
mysite_url <- getURL(mysite)
mysite2 <- "http://melindahiggins2000.github.io/testdata.csv"
mysite_url <- getURL(mysite2)
class(mysite_url)
somedata <- read.csv(textConnection(mysite_url), header=true)
somedata <- read.csv(textConnection(mysite_url))
class(somedata)
somedata
mysite3 <- "http://melindahiggins2000.github.io/datasets/testdata.csv"
mysite_url <- getURL(mysite3)
somedata2 <- read.csv(textConnection(mysite_url))
somedata2
plot(somedata2$var1, somedata2$var2, "bo")
plot(somedata2$var1, somedata2$var2, "blue")
plot(somedata2$var1, somedata2$var2)
plot(somedata2$var1, somedata2$var2)
help(getURL)
mysite <- "https://github.com/melindahiggins2000/melindahiggins2000.github.io/blob/master/testdata.csv"
mysite_url <- getURL(mysite, ssl.verifypeer = FALSE)
somedata1 <- read.csv(textConnection(mysite_url))
somedata1
class(somedata1)
class(somedata)
mysite <- "https://raw.githubusercontent.com/melindahiggins2000/melindahiggins2000.github.io/master/testdata.csv"
mysite_url <- getURL(mysite)
mysite_url <- getURL(mysite, ssl.verifypeer = FALSE)
somedata1a <- read.csv(textConnection(mysite_url))
somedata1a
eboxsite <- "https://emory.app.box.com/files/0/f/2782143919/1/f_23669754943"
ebox_url <- getURL(eboxsite)
ebox_url <- getURL(eboxsite, ssl.verifypeer = FALSE)
eboxdata <- read.csv(textConnection(ebox_url))
eboxdata
eboxsite <- "https://emory.box.com/shared/static/8x6c7z6b91hh6otpoum5.csv"
ebox_url <- getURL(eboxsite, ssl.verifypeer = FALSE)
eboxdata <- read.csv(textConnection(ebox_url))
eboxdata
ebox_url
mysite_url
eboxsite <- "https://emory.box.com/shared/static/8x6c7z6b91hh6otpoum5.csv"
eboxsite
ebox_url <- getURL(eboxsite, ssl.verifypeer = FALSE)
class(ebox_url)
class(mysite_url)
mysite_url
ebox_url
ebox_url <- getURL(eboxsite, ssl.verifypeer = FALSE, userpwd="mkhiggi:Pbdbnm4u4")
ebox_url
eboxdata <- read.csv(textConnection(ebox_url))
data(mtcars)
?mtcars
mtcars
names(mtcars)
row.names(mtcars)
labels(mtcars)
help(codebook)
??codebook
?memisc
install.packages("memisc")
library(memisc)
help(codebook)
library(psych)
install.packages("psych")
library(psych)
help(data)
data()
data(bfi)
View(eboxdata)
ratings<-bfi[,1:25]
names(ratings)<-c(
"Indifferent of others",
"Inquire about others",
"Comfort others",
"Love children",
"Make people at ease",
"Exacting in my work",
"Until perfect",
"Do by plan",
"Do halfway",
"Waste time",
"Don't talk",
"Difficult approach others",
"Know how to captivate people",
"Make friends",
"Take charge",
"Angry easily",
"Irritated easily",
"Mood swings",
"Feel blue",
"Panic easily",
"Full of ideas",
"Avoid difficult reading",
"Carry conversation higher",
"Reflect on things",
"Not probe deeply"
)
fa.diagram(principal(ratings, nfactors=5), main="")
install.packages("GPArotation")
library(GPArotation)
fa.diagram(principal(ratings, nfactors=5), main="")
install.packages("qgraph")
library(qgraph)
qgraph(cor(ratings, use="pairwise"), layout="spring",
label.cex=0.9, labels=names(ratings),
label.scale=FALSE)
cars
plot(cars)
install.packages("Deducer")
install.packages("RcmdrMisc")
library(memisc)
options(digits=3)
nes1948.por <- UnZip("anes/NES1948.ZIP","NES1948.POR",package="memisc")
ls()
nes1948 <- spss.portable.file(nes1948.por)
class(nes1948)
print(nes1948)
names(nes1948)
# show the variable labels for the 67 variables
description(nes1948)
?codebook
head(nes1948)
## side data illustration of the codebook function
Data <- data.set(
vote = sample(c(1,2,3,8,9,97,99),size=300,replace=TRUE),
region = sample(c(rep(1,3),rep(2,2),3,99),size=300,replace=TRUE),
income = exp(rnorm(300,sd=.7))*2000
)
Data
Data <- within(Data,{
description(vote) <- "Vote intention"
description(region) <- "Region of residence"
description(income) <- "Household income"
wording(vote) <- "If a general election would take place next tuesday,
the candidate of which party would you vote for?"
wording(income) <- "All things taken into account, how much do all
household members earn in sum?"
foreach(x=c(vote,region),{
measurement(x) <- "nominal"
})
measurement(income) <- "ratio"
labels(vote) <- c(
Conservatives         =  1,
Labour                =  2,
"Liberal Democrats"   =  3,
"Don't know"          =  8,
"Answer refused"      =  9,
"Not applicable"      = 97,
"Not asked in survey" = 99)
labels(region) <- c(
England               =  1,
Scotland              =  2,
Wales                 =  3,
"Not applicable"      = 97,
"Not asked in survey" = 99)
foreach(x=c(vote,region,income),{
annotation(x)["Remark"] <- "This is not a real survey item, of course ..."
})
missing.values(vote) <- c(8,9,97,99)
missing.values(region) <- c(97,99)
})
Data
codebook(Data)
ls()
class(nes1948)
names(nes1948)
class(nes1948$vdsetno)
class(nes1948$v480045)
nes1948$v480045
summary(nes1948$v480045)
names(Data)
Data$vote
fix(Data)
library(Rlabkey)
install_github("RGLab/ImmuneSpaceR")
library(devtools)
install_github("RGLab/ImmuneSpaceR")
library(ggthemr)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(reshape2)
library(rfigshare)
library(affy)
library(GEOmetadb)
library(GEOquery)
library(devtools)
library(ggthemr)
library(Rlabkey)
source("http://bioconductor.org/biocLite.R")
biocLite("Biobase")
library(Biobase)
install_github("RGLab/ImmuneSpaceR")
update.packages(ask='graphics',checkBuilt=TRUE)
sessionInfo()
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
remove.packages(Rlabkey)
remove.packages('Rlabkey')
sessionInfo()
q()
sessionInfo()
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(reshape2)
library(rfigshare)
library(affy)
library(GEOmetadb)
library(GEOquery)
library(devtools)
library(ggthemr)
utils:::menuInstallLocal()
sessionInfo()
library(Biobase)
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
sessionInfo()
library(Rlabkey)
sessionInfo()
install_github("RGLab/ImmuneSpaceR")
library(ImmuneSpaceR)
sessionInfo()
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
source("http://bioconductor.org/biocLite.R")
biocLite("SRAdb")
library(SRAdb)
sessionInfo()
sessionInfo()
q()
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(reshape2)
library(rfigshare)
library(affy)
library(GEOmetadb)
library(GEOquery)
library(devtools)
library(ggthemr)
library(Rlabkey)
library(Biobase)
library(ImmuneSpaceR)
library(limma)
library(SRAdb)
sessionInfo()
q()
?ToothGrowth
View(ToothGrowth)
data(ToothGrowth)
class(ToothGrowth)
summary(ToothGrowth)
summary.data.frame(ToothGrowth)
methods(data.frame)
?methods
methods(class=data.frame)
is(ToothGrowth)
setwd('C:/MyR/workshops_R_RepRes')
getwd()
setwd('C:/MyGithub/web2/teaching/RWorkshops')
